---
description: Must always use when using operative.sh MCP web-eval-agent for autonomous web testing and debugging
globs: 
alwaysApply: false
---
# agent-requested/tools/operative-sh.mdc

## [CRITICAL] Tool Invocation Requirements
- ALWAYS run `npm run dev ----port 5173` FIRST before using web-eval-agent
- ALWAYS specify the complete localhost URL when using web-eval-agent (http://localhost:5173)
- MUST login with 
 and password @123Operative
- NEVER use web-eval-agent without first ensuring the development server is running
- MUST include "Use web-eval-agent" in your prompt to trigger tool usage
TEST: Agent should start dev server then call web-eval-agent tool with proper URL format

## [CRITICAL] Authentication Setup
- Use setup-browser-state tool FIRST for apps requiring login
- ALWAYS save browser session state to avoid repeated authentication

- NEVER skip authentication setup for protected routes
TEST: Browser state should persist login credentials across test runs

## [IMPORTANT] Task Description Patterns
- Write test instructions in natural language, be specific about expected behavior
- Include edge cases and error scenarios in test descriptions
- ALWAYS specify what constitutes success/failure criteria
TEST: Task descriptions should be clear enough for autonomous execution

## [IMPORTANT] Results Analysis
- ALWAYS analyze failed test results and console errors captured
- Use operative.sh network traffic data to debug API integration issues
- NEVER ignore skipped tests - investigate and resolve blocking issues
TEST: Should provide actionable insights from test failures and network data